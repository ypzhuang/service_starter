buildscript {
	ext {
		springBootVersion = '2.2.2.RELEASE'
	}
	repositories {
	    maven { url "http://repo.spring.io/libs-milestone" }
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


ext.springMobileVersion = "2.0.0.M3"
ext.myBatisPlusVersion = "3.1.0"

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'com.hptiger.starter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven { url "http://repo.spring.io/libs-milestone" }
	mavenCentral()
}

sourceSets {
    // So that we can place source code in 'src/integrationTest/java':
    integrationTest {
        java {
            // So that we can compile against the business classes (GreeterService, ...):
            compileClasspath += main.output
            // So that we can compile against the libs used by the business classes:
            compileClasspath += main.compileClasspath

            // So that we can compile against the unit test classes (custom utilities fx):
            compileClasspath += test.output
            // So that we can compile against the libs used by the unit test classes (JUnit, Spring test support, ...):
            compileClasspath += test.compileClasspath

            // So that test- and business classes can be used at runtime:
            runtimeClasspath += test.runtimeClasspath

        }
    }
}

task integrationTest(type: Test) {

    // So that Gradle knows where the integration test classes are:
   
    testClassesDirs = sourceSets.integrationTest.output.classesDirs

    // So that Gradle knows which runtime class path to use:
    classpath = sourceSets.integrationTest.runtimeClasspath
}

dependencies {
//    compile('org.springframework.boot:spring-boot-starter-actuator')
//    compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-mail')	
	compile('org.apache.commons:commons-pool2')

    compile('mysql:mysql-connector-java:5.1.47')

    compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'
//	runtime('org.springframework.boot:spring-boot-devtools')
//	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')

    compile('org.apache.httpcomponents:httpclient:4.3.1')
    compile('org.apache.commons:commons-lang3:3.3.2')

	compile('com.google.guava:guava:20.0')
	compile('joda-time:joda-time:2.9.9')
	compile('io.jsonwebtoken:jjwt:0.9.1')
	compile('com.google.code.gson:gson:2.8.5')


	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')

	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	
	compile("org.springframework.mobile:spring-mobile-starter:${springMobileVersion}")
	
	compile("com.baomidou:mybatis-plus-boot-starter:${myBatisPlusVersion}")
	compile("com.baomidou:mybatis-plus:${myBatisPlusVersion}")
	compile("com.baomidou:mybatis-plus-generator:${myBatisPlusVersion}")
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    
    compile('commons-io:commons-io:2.6')
    compile('org.json:json:20180813')
	implementation 'com.github.tobato:fastdfs-client:1.26.4'	
	implementation 'org.bouncycastle:bcprov-jdk16:1.46'
	implementation 'commons-codec:commons-codec:1.4'
	
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	compile('ypzhuang:spring-json-view:1.2.0-SNAPSHOT') {
	   exclude group: 'org.slf4j',module:'slf4j-log4j12'
	}
	
	compile group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '4.0.3'
	compile 'commons-validator:commons-validator:1.6'
	compile group: 'com.github.javafaker', name: 'javafaker', version: '0.18'
	compile('org.apache.rocketmq:rocketmq-spring-boot-starter:2.0.3') 	
	implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.1'
}

compileJava.dependsOn(processResources)

